import { NextResponse } from 'next/server';
import type { NextRequest } from 'next/server';

export function middleware(request: NextRequest) {
  // Obtiene la ruta de la URL
  const path = request.nextUrl.pathname;

  // Lista de rutas protegidas que solo son accesibles para administradores
  const adminOnlyPaths = [
    '/plate-editor',
    '/admin',
    '/admin-dashboard',
    '/admin/dashboard',
    '/admin/pages',
    '/admin/menu',
    '/admin/files'
  ];

  // Verifica si la ruta actual está protegida
  const isProtectedPath = adminOnlyPaths.some(protectedPath => 
    path === protectedPath || path.startsWith(`${protectedPath}/`)
  );

  if (isProtectedPath) {
    // Comprobar primero si la cookie de autToken existe
    // Esto es solo una comprobación básica de autenticación, la verificación real se hará en el componente
    const isAuthCookiePresent = request.cookies.has('authToken');
    
    // Solo si no hay cookie de autenticación, redirigir al inicio
    if (!isAuthCookiePresent) {
      const url = request.nextUrl.clone();
      url.pathname = '/home';
      return NextResponse.redirect(url);
    }
  }

  // Verifica si la ruta es /admin/editor o empieza con /admin/editor/
  if (path === '/admin/editor' || (path.startsWith('/admin/editor/') && path !== '/admin/editor-admin' && !path.startsWith('/admin/editor-admin/'))) {
    // Construye la nueva URL reemplazando /editor con /editor-admin
    const newUrl = request.nextUrl.clone();
    newUrl.pathname = path.replace('/admin/editor', '/admin/editor-admin');
    
    // Redirecciona a la nueva URL
    return NextResponse.redirect(newUrl);
  }

  // Para todas las demás rutas, continúa normalmente
  return NextResponse.next();
}

export const config = {
  // Aplica este middleware a las rutas específicas
  matcher: [
    '/plate-editor',
    '/plate-editor/:path*',
    '/admin/:path*',
    '/admin-dashboard/:path*',
    '/admin/editor',
    '/admin/editor/:path*'
  ],
};
